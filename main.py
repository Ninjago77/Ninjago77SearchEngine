import shlex,subprocess,flet,flet.theme
import search as searcher

class SearchLink(flet.ListTile):
    def __init__(self, title, url):
        self.url = url
        self.searchTitle = title
        super().__init__(leading=flet.Icon(flet.icons.OPEN_IN_BROWSER,color=flet.colors.BLUE_900), title=flet.Text(self.searchTitle,color=flet.colors.BLUE_900), subtitle=flet.Text(self.url), on_click=self.head_to_link)
    
    def head_to_link(self,event):
        global isWeb,page_launch_url
        if isWeb == True:
            page_launch_url(url=self.url,web_window_name="_blank")
        else:
            subprocess.call(shlex.split(f'python browser.py -t"{self.searchTitle}" "{self.url}"'))

class SearchTab(flet.Tab):
    def __init__(self, tabs, searchText, content):
        self.tabs = tabs
        super().__init__(
            content=content,
            tab_content=flet.Row(
            [
                flet.Text(searchText,color=flet.colors.BLUE_900),
                flet.IconButton(flet.icons.CLOSE, icon_color=flet.colors.BLUE_900, on_click=self.deleteTab),
            ]),
        )
    
    def deleteTab(self,event):
        index = None
        for i,tab in enumerate(self.tabs.tabs):
            if tab == self:
                index = i
        if index != None:
            self.tabs.tabs.pop(index)
            self.tabs.update()




def main(page: flet.Page):
    page.title = "Titus Search Engine"
    page.scroll = True
    # page.window_maximized = True
    page.vertical_alignment = flet.MainAxisAlignment.START
    page.theme_mode = "light"
    # page.window_bgcolor = flet.colors.RED
    page.bgcolor = flet.colors.CYAN_100

    global isWeb,page_launch_url
    isWeb = bool(page.web)
    page_launch_url = page.launch_url

    TABS = flet.Tabs(
        tabs=[],
        selected_index=0,
        animation_duration=100,
    )

    def createTab(title, content):
        TABS.tabs.append(
            SearchTab(TABS, title, content)
        )
        TABS.selected_index = len(TABS.tabs)-1
        TABS.update()

    searchBar = flet.TextField(
        label="Search",
        hint_text="Type to Search",
        expand=True,
        border_color=flet.colors.BLUE_900,
        color=flet.colors.BLUE_900,
        hint_style=flet.TextStyle(color=flet.colors.BLUE_900),
        cursor_color=flet.colors.BLUE_900,
        label_style=flet.TextStyle(color=flet.colors.BLUE_900),
    )
    
    def search():
        title = searchBar.value
        listofsearches = flet.ListView(
            expand=True,
            horizontal=False,
            auto_scroll=False,
            controls=[]
            
        )
        createTab(
            title=title,
            # content=flet.Column(controls=[
            #     listofsearches
            # ])
            content=listofsearches,
        )
        i = 0
        while True:
            iter_search = searcher.searchGoogle(title,i)
            if iter_search == 0:
                listofsearches.controls += [flet.ListTile(
                    leading=flet.Icon(flet.icons.ERROR,color=flet.colors.BLUE_900), title=flet.Text("Google Blocked Me :(",color=flet.colors.BLUE_900), subtitle=flet.Text("Google found out I'm a Robot! They will unblock me in a few minutes; Just wait..."),
                )]
                listofsearches.update()
                break
            if iter_search == None:
                break
            listofsearches.controls += [SearchLink(search["title"],search["link"]) for search in iter_search if search["link"] != None] 
            listofsearches.update()
            i += 1

    
    searchBar.on_submit = lambda e: search()

    page.add(
        flet.Row(alignment=flet.MainAxisAlignment.SPACE_BETWEEN,controls=[
            flet.Text("App made by Shanvanth Arunmozhi",color=flet.colors.BLUE_900),
            flet.Text("Logo made by Titus Kishore Kumar",color=flet.colors.BLUE_900),
        ]),
        flet.Divider(color=flet.colors.BLUE_900),
        flet.Row(controls=[
            flet.Container(padding=flet.padding.only(left=25),content=flet.Image(
                src_base64=r"",
                width=100,
                height=100,
            )),
            searchBar,
            flet.IconButton(
                icon_color=flet.colors.BLUE_900,
                icon=flet.icons.SEARCH,
                on_click=lambda e: search(),
            ),
        ]),
        TABS,
    )

if __name__ == "__main__":
    if False:
        flet.app(target=main)
    else:
        # flet.app(target=main, view=flet.WEB_BROWSER, port=int(80))
        flet.app(target=main, view=None, port=int(80), assets_dir="assets")